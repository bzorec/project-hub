@page "/login"
@using Direct4Me.Blazor.Data
@inject UserService UserService
@inject NavigationManager NavigationManager

<div class="container-fluid bg-dark min-vh-100 pt-4">
    <div class="d-flex justify-content-center align-items-center h-100">
        <div class="col-sm-10 col-md-8 col-lg-6">
            <h2 class="text-center mb-4">Sign in</h2>
            @if (!string.IsNullOrEmpty(ErrorMessage))
            {
                <div class="alert alert-danger" role="alert">
                    @ErrorMessage
                </div>
            }
            <form class="p-5 rounded shadow" @onsubmit="HandleLogin">
                <div class="mb-3">
                    <label for="email" class="form-label">Email address</label>
                    <input type="email" class="form-control" id="email" aria-describedby="emailHelp" placeholder="Enter email" @bind-value="LoginEmail" autofocus required>
                    <div id="emailHelp" class="form-text">We'll never share your email with anyone else.</div>
                </div>
                <div class="mb-3">
                    <label for="password" class="form-label">Password</label>
                    <input type="password" class="form-control" id="password" placeholder="Password" @bind-value="LoginPassword" required>
                </div>
                <button type="submit" class="btn btn-primary w-100 mt-4" disabled="@IsLoading">
                    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true" style="display: @(IsLoading ? "inline-block" : "none")"></span>
                    Sign in
                </button>
            </form>
        </div>
    </div>
</div>

@code {

    private string LoginEmail { get; set; } = null!;

    private string LoginPassword { get; set; } = null!;

    private string? ErrorMessage { get; set; }

    public bool IsLoading { get; set; }

    private async Task HandleLogin()
    {
        var user = await UserService.AuthenticateAsync(LoginEmail, LoginPassword);

        if (user == null)
        {
            ErrorMessage = "Invalid email or password";
            return;
        }

    // Session.Set("LoggedInUser", user.Id);

        NavigationManager.NavigateTo("/dashboard");
    }

}