<!-- PopupGuide.razor -->
@if (IsPopupVisible)
{
    <div class="popup-guide-container">
        <div class="popup-guide-content">
            <button class="close-button" @onclick="ClosePopup">&times;</button>
            <h5 class="popup-guide-title">@Title</h5>
            <p class="popup-guide-text">@Content</p>
            <div class="form-check">
                <input class="form-check-input" type="checkbox" id="skipGuideCheckbox" @bind="SkipGuide"/>
                <label class="form-check-label" for="skipGuideCheckbox">Don't show this again</label>
            </div>
        </div>
    </div>
}

@code {

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public string Content { get; set; }

    [Parameter]
    public bool IsPopupVisible { get; set; }

    [Parameter]
    public ElementReference TargetElement { get; set; }

    [Parameter]
    public EventCallback<bool> SkipGuideChanged { get; set; }

    [Parameter]
    public EventCallback<bool> ClosePopupRequested { get; set; }

    private bool _skipGuide;

    public bool SkipGuide
    {
        get => _skipGuide;
        set
        {
            _skipGuide = value;
            SkipGuideChanged.InvokeAsync(value);
        }
    }

    private Task ClosePopup()
    {
        return ClosePopupRequested.InvokeAsync(true);
    }

}